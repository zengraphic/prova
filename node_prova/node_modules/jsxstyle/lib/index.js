'use strict';

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var Addons = require('./Addons');
var Color = require('./Color');
var Display = require('./Display');
var GlobalStylesheets = require('./GlobalStylesheets');

var createCSS = require('./createCSS');
var curry = require('./curry');
var invariant = require('invariant');

var index = _extends({
  curry: curry,
  install: GlobalStylesheets.install,
  injectAutoprefixer: function injectAutoprefixer(autoprefix) {
    invariant(typeof autoprefix === 'function', 'You may only inject functions for autoprefix');
    createCSS.injection.autoprefix = autoprefix;
  },
  injectClassNameStrategy: function injectClassNameStrategy(getStylesheetId, formatClassNameFromId) {
    if (getStylesheetId) {
      invariant(typeof getStylesheetId === 'function', 'getStylesheetId must be a function');
      GlobalStylesheets.injection.getStylesheetId = getStylesheetId;
    }

    if (formatClassNameFromId) {
      invariant(typeof formatClassNameFromId === 'function', 'formatClassNameFromId must be a function');
      GlobalStylesheets.injection.formatClassNameFromId = formatClassNameFromId;
    }
  }
}, Color, Display, Addons);

module.exports = index;